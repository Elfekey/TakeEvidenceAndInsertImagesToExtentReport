<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="5" total="8" passed="1" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-12T16:35:14 EET" name="Suite" finished-at="2022-10-12T16:36:05 EET" duration-ms="50811">
    <groups>
    </groups>
    <test started-at="2022-10-12T16:35:14 EET" name="Test" finished-at="2022-10-12T16:35:49 EET" duration-ms="34344">
      <class name="Tests.testing">
        <test-method is-config="true" signature="beforeMethod(org.testng.ITestResult)[pri:0, instance:Tests.testing@2b91004a]" started-at="2022-10-12T16:35:14 EET" name="beforeMethod" finished-at="2022-10-12T16:35:18 EET" duration-ms="3810" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=testing.test1()[pri:0, instance:Tests.testing@2b91004a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:Tests.testing@2b91004a]" started-at="2022-10-12T16:35:18 EET" name="test1" description="This is test case one now" finished-at="2022-10-12T16:35:45 EET" duration-ms="26696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Tests.testing@2b91004a]" started-at="2022-10-12T16:35:45 EET" name="afterMethod" finished-at="2022-10-12T16:35:49 EET" duration-ms="3696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=testing.test1()[pri:0, instance:Tests.testing@2b91004a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- Tests.testing -->
    </test> <!-- Test -->
    <test started-at="2022-10-12T16:35:14 EET" name="Test3" finished-at="2022-10-12T16:35:54 EET" duration-ms="39940">
      <class name="Tests.t1">
        <test-method is-config="true" signature="setupSuite()[pri:0, instance:Tests.t1@729d991e]" started-at="2022-10-12T16:35:06 EET" name="setupSuite" finished-at="2022-10-12T16:35:14 EET" duration-ms="8532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuite -->
        <test-method is-config="true" signature="beforeMethod(org.testng.ITestResult)[pri:0, instance:Tests.t1@729d991e]" started-at="2022-10-12T16:35:14 EET" name="beforeMethod" finished-at="2022-10-12T16:35:18 EET" duration-ms="3857" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=t1.TestCaseTwo()[pri:0, instance:Tests.t1@729d991e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TestCaseTwo()[pri:0, instance:Tests.t1@729d991e]" started-at="2022-10-12T16:35:18 EET" name="TestCaseTwo" description="This is test case Two from class t1 now" finished-at="2022-10-12T16:35:53 EET" duration-ms="34832" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipppppp]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipppppp
at Tests.t1.TestCaseTwo(t1.java:95)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCaseTwo -->
        <test-method is-config="true" signature="afterM(org.testng.ITestResult)[pri:0, instance:Tests.t1@729d991e]" started-at="2022-10-12T16:35:53 EET" name="afterM" finished-at="2022-10-12T16:35:54 EET" duration-ms="827" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCaseTwo status=SKIP method=t1.TestCaseTwo()[pri:0, instance:Tests.t1@729d991e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterM -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Tests.t1@729d991e]" started-at="2022-10-12T16:35:54 EET" name="afterMethod" finished-at="2022-10-12T16:35:54 EET" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCaseTwo status=SKIP method=t1.TestCaseTwo()[pri:0, instance:Tests.t1@729d991e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Tests.t1@729d991e]" started-at="2022-10-12T16:36:05 EET" name="afterSuite" finished-at="2022-10-12T16:36:05 EET" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Tests.t1 -->
    </test> <!-- Test3 -->
    <test started-at="2022-10-12T16:35:14 EET" name="Test2" finished-at="2022-10-12T16:36:05 EET" duration-ms="50809">
      <class name="Tests.testing">
        <test-method is-config="true" signature="beforeMethod(org.testng.ITestResult)[pri:0, instance:Tests.testing@17497425]" started-at="2022-10-12T16:35:14 EET" name="beforeMethod" finished-at="2022-10-12T16:35:19 EET" duration-ms="4473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=testing.test2()[pri:0, instance:Tests.testing@17497425] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:Tests.testing@17497425]" started-at="2022-10-12T16:35:19 EET" name="test2" description="This is test case Two  now" finished-at="2022-10-12T16:35:59 EET" duration-ms="40347" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Tests.testing.test2(testing.java:49)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Tests.testing@17497425]" started-at="2022-10-12T16:35:59 EET" name="afterMethod" finished-at="2022-10-12T16:36:05 EET" duration-ms="5874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=FAILURE method=testing.test2()[pri:0, instance:Tests.testing@17497425] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- Tests.testing -->
    </test> <!-- Test2 -->
  </suite> <!-- Suite -->
</testng-results>
